import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.preprocessing import StandardScaler

def distance(dist):
    # Training data
    dis_train = np.array([[65], [65.1], [65.2], [65.3], [65.4], [65.5], [65.6], [65.7], [65.8], [65.9], 
                      [66], [66.1], [66.2], [66.3], [66.4], [66.5], [66.6], [66.7], [66.8], [66.9],
                      [67], [67.1], [67.2], [67.3], [67.4], [67.5], [67.6], [67.7], [67.8], [67.9],
                      [68], [68.1], [68.2], [68.3], [68.4], [68.5], [68.6], [68.7], [68.8], [68.9],
                      [69], [69.1], [69.2], [69.3], [69.4], [69.5], [69.6], [69.7], [69.8], [69.9],
                      [70], [70.1], [70.2], [70.3], [70.4], [70.5], [70.6], [70.7], [70.8], [70.9], 
                      [71], [71.1], [71.2], [71.3], [71.4], [71.5], [71.6], [71.7], [71.8], [71.9], 
                      [72], [72.1], [72.2], [72.3], [72.4], [72.5], [72.6], [72.7], [72.8], [72.9],
                      [73], [73.1], [73.2], [73.3], [73.4], [73.5], [73.6], [73.7], [73.8], [73.9], 
                      [74], [74.1], [74.2], [74.3], [74.4], [74.5], [74.6], [74.7], [74.8], [74.9],
                      [75], [75.1], [75.2], [75.3], [75.4], [75.5], [75.6], [75.7], [75.8], [75.9],
                      [76], [76.1], [76.2], [76.3], [76.4], [76.5], [76.6], [76.7], [76.8], [76.9],
                      [77], [77.1], [77.2], [77.3], [77.4], [77.5], [77.6], [77.7], [77.8], [77.9],
                      [78], [78.1], [78.2], [78.3], [78.4], [78.5], [78.6], [78.7], [78.8], [78.9],
                      [79], [79.1], [79.2], [79.3], [79.4], [79.5], [79.6], [79.7], [79.8], [79.9],])
    
    ang_train = np.array([[0.9,1.8,2.6,8.7,17.1,21.3],[0.9,1.8,2.6,8.7,17.1,21.2],[0.9,1.8,2.6,8.7,17.1,21.2],[0.9,1.8,2.6,8.7,17,21.2],  [0.9,1.8,2.6,8.7,17,21.2],  [0.9,1.7,2.6,8.7,17,21.1],  [0.9,1.7,2.6,8.7,17,21.1],  [0.9,1.7,2.6,8.7,16.9,21.1],[0.9,1.7,2.6,8.6,16.9,21],  [0.9,1.7,2.6,8.6,16.9,21],  #65-65.9
                          [0.9,1.7,2.6,8.6,16.9,21],  [0.9,1.7,2.6,8.6,16.8,21],  [0.9,1.7,2.6,8.6,16.8,20.9],[0.9,1.7,2.6,8.6,16.8,20.9],[0.9,1.7,2.6,8.6,16.8,20.9],[0.9,1.7,2.6,8.6,16.7,20.8],[0.9,1.7,2.6,8.5,16.7,20.8],[0.9,1.7,2.6,8.5,16.7,20.8],[0.9,1.7,2.6,8.5,16.7,20.8],[0.9,1.7,2.6,8.5,16.6,20.7],#66-66.9
                          [0.9,1.7,2.6,8.5,16.6,20.7],[0.9,1.7,2.6,8.5,16.6,20.7],[0.9,1.7,2.6,8.5,16.6,20.6],[0.9,1.7,2.6,8.5,16.6,20.6],[0.9,1.7,2.5,8.4,16.5,20.6],[0.8,1.7,2.5,8.4,16.5,20.6],[0.8,1.7,2.5,8.4,16.5,20.5],[0.8,1.7,2.5,8.4,16.5,20.5],[0.8,1.7,2.5,8.4,16.4,20.5],[0.8,1.7,2.5,8.4,16.4,20.4],#67-67.9
                          [0.8,1.7,2.5,8.4,16.4,20.4],[0.8,1.7,2.5,8.4,16.4,20.4],[0.8,1.7,2.5,8.3,16.3,20.4],[0.8,1.7,2.5,8.3,16.3,20.3],[0.8,1.7,2.5,8.3,16.3,20.3],[0.8,1.7,2.5,8.3,16.3,20.3],[0.8,1.7,2.5,8.3,16.3,20.3],[0.8,1.7,2.5,8.3,16.2,20.2],[0.8,1.7,2.5,8.3,16.2,20.2],[0.8,1.7,2.5,8.3,16.2,20.2],#68-68.9
                          [0.8,1.7,2.5,8.2,16.2,20.1],[0.8,1.7,2.5,8.2,16.1,20.1],[0.8,1.7,2.5,8.2,16.1,20.1],[0.8,1.7,2.5,8.2,16.1,20.1],[0.8,1.7,2.5,8.2,16.1,20],  [0.8,1.6,2.5,8.2,16.1,20],  [0.8,1.6,2.5,8.2,16,20],    [0.8,1.6,2.5,8.2,16,20],    [0.8,1.6,2.5,8.2,16,19.9],  [0.8,1.6,2.5,8.1,16,19.9],   #69-69.9
                          [0.8,1.6,2.5,8.1,15.9,19.9],[0.8,1.6,2.5,8.1,15.9,19.9],[0.8,1.6,2.4,8.1,15.9,19.8],[0.8,1.6,2.4,8.1,15.9,19.8],[0.8,1.6,2.4,8.1,15.9,19.8],[0.8,1.6,2.4,8.1,15.8,19.7],[0.8,1.6,2.4,8.1,15.8,19.7],[0.8,1.6,2.4,8.1,15.8,19.7],[0.8,1.6,2.4,8,15.8,19.7],  [0.8,1.6,2.4,8,15.8,19.6],  #70-70.9
                          [0.8,1.6,2.4,8,15.7,19.6],  [0.8,1.6,2.4,8,15.7,19.6],  [0.8,1.6,2.4,8,15.7,19.6],  [0.8,1.6,2.4,8,15.7,19.5],  [0.8,1.6,2.4,8,15.7,19.5],  [0.8,1.6,2.4,8,15.6,19.5],  [0.8,1.6,2.4,8,15.6,19.5],  [0.8,1.6,2.4,7.9,15.6,19.4],[0.8,1.6,2.4,7.9,15.6,19.4],[0.8,1.6,2.4,7.9,15.5,19.4],#71-71.9
                          [0.8,1.6,2.4,7.9,15.5,19.4],[0.8,1.6,2.4,7.9,15.5,19.3],[0.8,1.6,2.4,7.9,15.5,19.3],[0.8,1.6,2.4,7.9,15.5,19.3],[0.8,1.6,2.4,7.9,15.4,19.3],[0.8,1.6,2.4,7.9,15.4,19.2],[0.8,1.6,2.4,7.8,15.4,19.2],[0.8,1.6,2.4,7.8,15.4,19.2],[0.8,1.6,2.4,7.8,15.4,19.2],[0.8,1.6,2.4,7.8,15.3,19.1],#72-72.9
                          [0.8,1.6,2.4,7.8,15.3,19.1],[0.8,1.6,2.4,7.8,15.3,19.1],[0.8,1.6,2.3,7.8,15.3,19.1],[0.8,1.6,2.3,7.8,15.3,19],  [0.8,1.6,2.3,7.8,15.2,19],  [0.8,1.6,2.3,7.7,15.2,19],  [0.8,1.6,2.3,7.7,15.2,19],  [0.8,1.6,2.3,7.7,15.2,19],  [0.8,1.6,2.3,7.7,15.2,18.9],[0.8,1.6,2.3,7.7,15.1,18.9],#73-73.9
                          [0.8,1.5,2.3,7.7,15.1,18.9],[0.8,1.5,2.3,7.7,15.1,18.9],[0.8,1.5,2.3,7.7,15.1,18.8],[0.8,1.5,2.3,7.7,15.1,18.8],[0.8,1.5,2.3,7.7,15,18.8],  [0.8,1.5,2.3,7.6,15,18.8],  [0.8,1.5,2.3,7.6,15,18.7],  [0.8,1.5,2.3,7.6,15,18.7],  [0.8,1.5,2.3,7.6,15,18.7],  [0.8,1.5,2.3,7.6,15,18.7],  #74-74.9
                          [0.8,1.5,2.3,7.6,14.9,18.6],[0.8,1.5,2.3,7.6,14.9,18.6],[0.8,1.5,2.3,7.6,14.9,18.6],[0.8,1.5,2.3,7.6,14.9,18.6],[0.8,1.5,2.3,7.6,14.9,18.6],[0.8,1.5,2.3,7.5,14.8,18.5],[0.8,1.5,2.3,7.5,14.8,18.5],[0.8,1.5,2.3,7.5,14.8,18.4],[0.8,1.5,2.3,7.5,14.8,18.5],[0.8,1.5,2.3,7.5,14.8,18.5], #75-75.9
                          [0.8,1.5,2.3,7.5,14.7,18.4],[0.8,1.5,2.3,7.5,14.7,18.4],[0.8,1.5,2.3,7.5,14.7,18.4],[0.8,1.5,2.3,7.5,14.7,18.4],[0.8,1.5,2.2,7.5,14.7,18.3],[0.7,1.5,2.2,7.4,14.7,18.3],[0.7,1.5,2.2,7.4,14.6,18.3],[0.7,1.5,2.2,7.4,14.6,18.2],[0.7,1.5,2.2,7.4,14.6,18.3],[0.7,1.5,2.2,7.4,14.6,18.2],#76-76.9
                          [0.7,1.5,2.2,7.4,14.6,18.2],[0.7,1.5,2.2,7.4,14.5,18.2],[0.7,1.5,2.2,7.4,14.5,18.2],[0.7,1.5,2.2,7.4,14.5,18.1],[0.7,1.5,2.2,7.4,14.5,18.1],[0.7,1.5,2.2,7.4,14.5,18.1],[0.7,1.5,2.2,7.3,14.5,18.1],[0.7,1.5,2.2,7.3,14.4,18],  [0.7,1.5,2.2,7.3,14.4,18],  [0.7,1.5,2.2,7.3,14.4,18],  #77-77.9
                          [0.7,1.5,2.2,7.3,14.4,18],  [0.7,1.5,2.2,7.3,14.4,18],  [0.7,1.5,2.2,7.3,14.3,17.9],[0.7,1.5,2.2,7.3,14.3,17.9],[0.7,1.5,2.2,7.3,14.3,17.9],[0.7,1.5,2.2,7.3,14.3,17.9],[0.7,1.5,2.2,7.3,14.3,17.8],[0.7,1.5,2.2,7.2,14.2,17.8],[0.7,1.5,2.2,7.2,14.3,17.8],[0.7,1.5,2.2,7.2,14.2,17.8],#78-78.9
                          [0.7,1.5,2.2,7.2,14.2,17.8],[0.7,1.4,2.2,7.2,14.2,17.7],[0.7,1.4,2.2,7.2,14.2,17.7],[0.7,1.4,2.2,7.2,14.2,17.7],[0.7,1.4,2.2,7.2,14.1,17.7],[0.7,1.4,2.2,7.2,14.1,17.7],[0.7,1.4,2.2,7.2,14.1,17.6],[0.7,1.4,2.2,7.1,14.1,17.6],[0.7,1.4,2.2,7.2,14.1,17.6],[0.7,1.4,2.2,7.1,14.1,17.6],#79-79.9
])
    # Polynomial transformation
    poly = PolynomialFeatures(degree=37)  # Change degree as needed
    dis_train_poly = poly.fit_transform(dis_train)
    
    # Train the model
    model = LinearRegression()
    model.fit(dis_train_poly, ang_train)

    input_distance = np.array([[dist]])
    input_distance_poly = poly.transform(input_distance)
    angle = model.predict(input_distance_poly)
    reshaped_arr = angle.reshape(-1, 1)
    rounded_arr = np.round(reshaped_arr, 1)
    #print(rounded_arr)
    return rounded_arr

# Run the example
#distance(70.5)